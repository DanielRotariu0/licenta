{"ast":null,"code":"import { formatDate } from \"@angular/common\";\nimport { LOCALE_ID } from \"@angular/core\";\nimport { distinctUntilChanged, first } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services\";\nimport * as i2 from \"src/app/services/notification.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/card\";\n\nfunction NotificationsComponent_div_0_h5_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\");\n    i0.ɵɵtext(1, \" You don't have any notifications at the moment. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\n\nfunction NotificationsComponent_div_0_div_8_div_1_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-button\", 8);\n    i0.ɵɵlistener(\"onClick\", function NotificationsComponent_div_0_div_8_div_1_ng_template_6_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const notification_r3 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.goToJobApplication(notification_r3));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"p-button\", 9);\n    i0.ɵɵlistener(\"onClick\", function NotificationsComponent_div_0_div_8_div_1_ng_template_6_Template_p_button_onClick_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const notification_r3 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.deleteNotification(notification_r3));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c0));\n  }\n}\n\nconst _c1 = function () {\n  return {\n    \"margin-bottom\": \"1em\",\n    backgroundColor: \"rgb(56,56,56)\"\n  };\n};\n\nfunction NotificationsComponent_div_0_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-card\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, NotificationsComponent_div_0_div_8_div_1_ng_template_6_Template, 2, 3, \"ng-template\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const notification_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(notification_r3.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(notification_r3.formattedTimestamp);\n  }\n}\n\nfunction NotificationsComponent_div_0_div_8_div_2_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-button\", 10);\n    i0.ɵɵlistener(\"onClick\", function NotificationsComponent_div_0_div_8_div_2_ng_template_6_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const notification_r3 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.goToJobApplication(notification_r3));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"p-button\", 9);\n    i0.ɵɵlistener(\"onClick\", function NotificationsComponent_div_0_div_8_div_2_ng_template_6_Template_p_button_onClick_1_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const notification_r3 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.deleteNotification(notification_r3));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c0));\n  }\n}\n\nconst _c2 = function () {\n  return {\n    \"margin-bottom\": \"1em\"\n  };\n};\n\nfunction NotificationsComponent_div_0_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-card\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, NotificationsComponent_div_0_div_8_div_2_ng_template_6_Template, 2, 3, \"ng-template\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const notification_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(notification_r3.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(notification_r3.formattedTimestamp);\n  }\n}\n\nfunction NotificationsComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NotificationsComponent_div_0_div_8_div_1_Template, 7, 5, \"div\", 5);\n    i0.ɵɵtemplate(2, NotificationsComponent_div_0_div_8_div_2_Template, 7, 5, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const notification_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r3.isRead);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !notification_r3.isRead);\n  }\n}\n\nfunction NotificationsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵelement(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"h3\");\n    i0.ɵɵtext(5, \"Notifications\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵtemplate(7, NotificationsComponent_div_0_h5_7_Template, 2, 0, \"h5\", 5);\n    i0.ɵɵtemplate(8, NotificationsComponent_div_0_div_8_Template, 3, 2, \"div\", 6);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.notifications.length == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.notifications);\n  }\n}\n\nexport let NotificationsComponent = /*#__PURE__*/(() => {\n  class NotificationsComponent {\n    constructor(accountService, notificationService, jobApplicationService, menuItemsService, messageService, router, locale) {\n      this.accountService = accountService;\n      this.notificationService = notificationService;\n      this.jobApplicationService = jobApplicationService;\n      this.menuItemsService = menuItemsService;\n      this.messageService = messageService;\n      this.router = router;\n      this.locale = locale;\n      this.notifications = [];\n    }\n\n    ngOnInit() {\n      this.accountService.user.subscribe(x => this.user = x);\n      this.notificationService.getUserNotifications(this.user.id).subscribe(notifications => {\n        this.notifications = notifications.map(notification => {\n          notification.formattedTimestamp = formatDate(notification.timestamp, \"d MMM y, h:mm:ss a\", this.locale);\n          return notification;\n        });\n      });\n    }\n\n    goToJobApplication(notification) {\n      if (this.user.isRecruiter) {\n        this.jobApplicationService.getJobApplicationById(notification.jobApplicationId).subscribe(jobApplication => {\n          this.router.navigate([\"/recruiter-job-applications\"], {\n            queryParams: {\n              jobId: `${jobApplication.jobId}`\n            }\n          });\n        });\n      } else {\n        this.router.navigate([\"/job-applications\"], {\n          queryParams: {\n            id: `${notification.jobApplicationId}`\n          }\n        });\n      }\n\n      if (!notification.isRead) {\n        this.notificationService.markNotificationAsRead(notification.id).pipe(first()).subscribe({\n          next: () => {\n            this.menuItemsService.menuItems$.pipe(distinctUntilChanged()).subscribe(menuItems => {\n              menuItems[menuItems.length - 2].badge = String(Number(menuItems[menuItems.length - 2].badge) - 1);\n              this.menuItemsService.updateMenuItems(menuItems);\n            });\n          },\n          error: error => {}\n        });\n      }\n    }\n\n    deleteNotification(notification) {\n      let notificationId = notification.id;\n      this.notificationService.deleteNotification(notificationId).pipe(first()).subscribe({\n        next: () => {\n          if (!notification.isRead) {\n            this.menuItemsService.menuItems$.pipe(distinctUntilChanged()).subscribe(menuItems => {\n              menuItems[menuItems.length - 2].badge = String(Number(menuItems[menuItems.length - 2].badge) - 1);\n              this.menuItemsService.updateMenuItems(menuItems);\n            });\n          }\n\n          this.messageService.add({\n            severity: \"success\",\n            summary: \"Succes\",\n            detail: \"Notification deleted succesfully.\"\n          });\n          this.notifications = this.notifications.filter(notification => notification.id != notificationId);\n        },\n        error: error => {\n          console.log(\"error\");\n        }\n      });\n    }\n\n  }\n\n  NotificationsComponent.ɵfac = function NotificationsComponent_Factory(t) {\n    return new (t || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i1.JobApplicationService), i0.ɵɵdirectiveInject(i1.MenuItemsService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(LOCALE_ID));\n  };\n\n  NotificationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationsComponent,\n    selectors: [[\"app-notifications\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"container-fluid text-white bg-dark\", 4, \"ngIf\"], [1, \"container-fluid\", \"text-white\", \"bg-dark\"], [1, \"row\"], [1, \"col-4\"], [\"id\", \"notification-list\", 1, \"col-4\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"pTemplate\", \"footer\"], [\"label\", \"View Application\", \"styleClass\", \"p-button-secondary\", 3, \"onClick\"], [\"label\", \"Delete\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"onClick\"], [\"label\", \"View Application\", 3, \"onClick\"]],\n    template: function NotificationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NotificationsComponent_div_0_Template, 9, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.user);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i3.PrimeTemplate, i6.Button, i7.Card],\n    styles: [\"#notification-list{min-height:93.9vh}.read-notification{background-color:#6d6d6d!important}\\n\"],\n    encapsulation: 2\n  });\n  return NotificationsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}