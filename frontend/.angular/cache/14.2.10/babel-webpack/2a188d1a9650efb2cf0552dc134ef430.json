{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/inputtext\";\nimport * as i6 from \"primeng/panel\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.form.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true; // reset alerts on submit\n\n      this.alertService.clear(); // stop here if form is invalid\n\n      if (this.form.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.accountService.login(this.f.username.value, this.f.password.value).pipe(first()).subscribe({\n        next: () => {\n          // get return url from query parameters or default to home page\n          const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n          this.router.navigateByUrl(returnUrl);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 24,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"header\", \"Login Example\"], [1, \"ui-grid\", \"ui-grid-responsive\", \"ui-grid-pad\", \"ui-fluid\", 2, \"margin\", \"10px 0px\"], [1, \"ui-grid-row\"], [1, \"ui-grid-col-2\"], [1, \"ui-grid-col-6\"], [\"pInputText\", \"\", \"type\", \"text\", \"formControlName\", \"login\", \"name\", \"login\", 1, \"form-control\"], [1, \"ui-grid-col-4\"], [1, \"alert\", \"alert-danger\", 3, \"hidden\"], [\"pInputText\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"name\", \"password\", 1, \"form-control\"], [\"pButton\", \"\", \"type\", \"submit\", \"label\", \"Submit\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"p-panel\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtext(5, \"Login:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8);\n        i0.ɵɵtext(10, \" Login is required \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"div\", 4);\n        i0.ɵɵtext(13, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 5);\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"div\", 8);\n        i0.ɵɵtext(18, \" Password is required \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 3);\n        i0.ɵɵelement(20, \"div\", 4);\n        i0.ɵɵelementStart(21, \"div\", 5);\n        i0.ɵɵelement(22, \"button\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"div\", 7);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"hidden\", ctx.loginForm.controls[\"login\"].valid || !ctx.loginForm.controls[\"login\"].dirty);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"hidden\", ctx.loginForm.controls[\"password\"].valid || !ctx.loginForm.controls[\"password\"].dirty);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.ButtonDirective, i5.InputText, i6.Panel],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}