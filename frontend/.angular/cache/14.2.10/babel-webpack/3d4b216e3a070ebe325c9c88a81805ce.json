{"ast":null,"code":"import { environment } from \"../../environments/environment\";\nimport { Job } from \"../_models/job\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./country.service\";\nimport * as i3 from \"./city.service\";\nimport * as i4 from \"./company.service\";\nimport * as i5 from \"./work_type.service\";\nexport let JobService = /*#__PURE__*/(() => {\n  class JobService {\n    constructor(http, countryService, cityService, companyService, workTypeService) {\n      this.http = http;\n      this.countryService = countryService;\n      this.cityService = cityService;\n      this.companyService = companyService;\n      this.workTypeService = workTypeService;\n    }\n\n    getJobs(page, maxJobs, countries) {\n      let URL = `${environment.searchApiURL}/jobs?page=${page}&maxJobs=${maxJobs}`;\n\n      if (typeof countries !== \"undefined\") {\n        const countryQueryParam = `&country=${countries.join(\",\")}`;\n        URL += countryQueryParam;\n      }\n\n      return this.http.get(URL);\n    }\n\n    toJob(jobResponse) {\n      const job = new Job();\n      job.id = jobResponse.id;\n      job.title = jobResponse.title;\n      this.companyService.getCompanyById(jobResponse.companyId).subscribe(company => {\n        job.company = company;\n      });\n      this.cityService.getCityById(jobResponse.cityId).subscribe(city => {\n        job.city = city;\n      });\n      this.countryService.getCountryByID(jobResponse.countryId).subscribe(country => {\n        job.country = country;\n      });\n      this.workTypeService.getWorkTypeById(jobResponse.workTypeId).subscribe(workType => {\n        job.workType = workType;\n      });\n      job.description = jobResponse.description;\n      return job;\n    }\n\n  }\n\n  JobService.ɵfac = function JobService_Factory(t) {\n    return new (t || JobService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CountryService), i0.ɵɵinject(i3.CityService), i0.ɵɵinject(i4.CompanyService), i0.ɵɵinject(i5.WorkTypeService));\n  };\n\n  JobService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JobService,\n    factory: JobService.ɵfac,\n    providedIn: \"root\"\n  });\n  return JobService;\n})();","map":null,"metadata":{},"sourceType":"module"}