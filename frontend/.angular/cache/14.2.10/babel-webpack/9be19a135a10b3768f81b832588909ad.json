{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from \"@angular/core\";\nlet JobsComponent = class JobsComponent {\n  constructor(route, databaseService) {\n    this.route = route;\n    this.databaseService = databaseService;\n    this.totalElements = 0;\n    this.totalPages = 0;\n    this.maxJobs = 5;\n    this.selectedCountries = [];\n    this.selectedCities = [];\n    this.selectedCompanies = [];\n    this.selectedIndustries = [];\n    this.selectedWorkTypes = [];\n    this.selectedJobTypes = [];\n    this.selectedExperienceLevels = [];\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.queryParams = params;\n    });\n    this.databaseService.getJobs(0, this.maxJobs, undefined, this.selectedCountries, this.selectedCities, this.selectedCompanies, this.selectedIndustries).subscribe(jobQueryResponse => {\n      this.jobs = this.toJobList(jobQueryResponse.jobList);\n      this.totalElements = jobQueryResponse.totalElements;\n      this.totalPages = jobQueryResponse.totalPages;\n      this.selectedJob = this.jobs[0];\n      setTimeout(() => this.paginator.changePage(0));\n    });\n    this.databaseService.getCountries().subscribe(countries => {\n      this.countries = countries;\n    });\n    this.databaseService.getCities().subscribe(cities => {\n      this.cities = cities;\n    });\n    this.databaseService.getCompanies().subscribe(companies => {\n      this.companies = companies;\n      this.selectedCompanies = this.companies.filter(company => company.id == this.queryParams.companyId);\n      this.onClickFilter();\n    });\n    this.databaseService.getIndustries().subscribe(industries => {\n      this.industries = industries;\n      this.selectedIndustries = this.industries.filter(industry => industry.id == this.queryParams.industryId);\n      this.onClickFilter();\n    });\n    this.databaseService.getWorkTypes().subscribe(workTypes => {\n      this.workTypes = workTypes;\n    });\n    this.databaseService.getJobTypes().subscribe(jobTypes => {\n      this.jobTypes = jobTypes;\n    });\n    this.databaseService.getExperienceLevels().subscribe(experienceLevels => {\n      this.experienceLevels = experienceLevels;\n    });\n  }\n\n  setSelectedJob(job) {\n    this.selectedJob = job;\n  }\n\n  onClickFilter() {\n    this.jobs = [];\n    this.databaseService.getJobs(0, this.maxJobs, this.title, this.selectedCountries, this.selectedCities, this.selectedCompanies, this.selectedIndustries, this.selectedWorkTypes, this.selectedJobTypes, this.selectedExperienceLevels, this.description).subscribe(jobQueryResponse => {\n      this.jobs = this.toJobList(jobQueryResponse.jobList);\n      this.totalElements = jobQueryResponse.totalElements;\n      this.totalPages = jobQueryResponse.totalPages;\n      this.selectedJob = this.jobs[0];\n    });\n  }\n\n  onPageChange(event) {\n    this.jobs = [];\n    this.databaseService.getJobs(event.page, this.maxJobs, this.title, this.selectedCountries, this.selectedCities, this.selectedCompanies, this.selectedIndustries, this.selectedWorkTypes, this.selectedJobTypes, this.selectedExperienceLevels, this.description).subscribe(jobQueryResponse => {\n      this.jobs = this.toJobList(jobQueryResponse.jobList);\n    });\n  }\n\n  onClickClearFilters() {\n    this.title = \"\";\n    this.selectedCompanies = [];\n    this.selectedCountries = [];\n    this.selectedCities = [];\n    this.selectedIndustries = [];\n    this.selectedWorkTypes = [];\n    this.selectedJobTypes = [];\n    this.selectedExperienceLevels = [];\n    this.description = \"\";\n    this.databaseService.getJobs(0, this.maxJobs).subscribe(jobQueryResponse => {\n      this.jobs = this.toJobList(jobQueryResponse.jobList);\n      this.totalElements = jobQueryResponse.totalElements;\n      this.totalPages = jobQueryResponse.totalPages;\n      this.selectedJob = this.jobs[0];\n      setTimeout(() => this.paginator.changePage(0));\n    });\n    this.databaseService.getCities().subscribe(cities => {\n      this.cities = cities;\n    });\n  }\n\n  onChangeCountry(event) {\n    this.cities = [];\n\n    if (this.selectedCountries.length != 0) {\n      this.selectedCountries.map(country => {\n        this.databaseService.getCitiesByCountryId(country.id).subscribe(cities => {\n          this.cities.push(...cities);\n        });\n      });\n    } else {\n      this.databaseService.getCities().subscribe(cities => {\n        this.cities = cities;\n      });\n    }\n  }\n\n  toJobList(jobResponseList) {\n    return jobResponseList.map(response => this.databaseService.toJob(response));\n  }\n\n};\n\n__decorate([ViewChild(\"paginator\", {\n  static: true\n})], JobsComponent.prototype, \"paginator\", void 0);\n\nJobsComponent = __decorate([Component({\n  selector: \"app-jobs\",\n  templateUrl: \"./jobs.component.html\",\n  styleUrls: [\"./jobs.component.scss\"]\n})], JobsComponent);\nexport { JobsComponent };","map":null,"metadata":{},"sourceType":"module"}