{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let JobApplicationService = /*#__PURE__*/(() => {\n  class JobApplicationService {\n    constructor(http) {\n      this.http = http;\n      this.selectedJobApplicationId = null;\n      this.newMessage = new BehaviorSubject(null);\n      this.currentNewMessage = this.newMessage.asObservable();\n    }\n\n    updateNewMessage(message) {\n      this.newMessage.next(message);\n    }\n\n    create(userId, jobId) {\n      return this.http.post(`${environment.jobApplicationsApiURL}/users/${userId}/job-applications`, {\n        jobId\n      });\n    }\n\n    getJobApplicationById(id) {\n      return this.http.get(`${environment.jobApplicationsApiURL}/job-applications/${id}`);\n    }\n\n    getJobApplicationsByUserId(userId) {\n      return this.http.get(`${environment.jobApplicationsApiURL}/users/${userId}/job-applications`);\n    }\n\n    getJobApplicationsByJobId(jobId) {\n      return this.http.get(`${environment.jobApplicationsApiURL}/jobs/${jobId}/job-applications`);\n    }\n\n    getStatus() {\n      return this.http.get(`${environment.jobApplicationsApiURL}/job-applications/status`);\n    }\n\n    getStatusById(statusId) {\n      return this.http.get(`${environment.jobApplicationsApiURL}/job-applications/status/${statusId}`);\n    }\n\n    getRecruiterStatistics(recruiterId) {\n      return this.http.get(`${environment.jobApplicationsApiURL}/recruiters/${recruiterId}/statistics`);\n    }\n\n    update(jobApplicationId, statusId) {\n      return this.http.put(`${environment.jobApplicationsApiURL}/job-applications/${jobApplicationId}`, {\n        statusId: statusId\n      });\n    }\n\n    addMessage(jobApplicationId, message) {\n      return this.http.post(`${environment.jobApplicationsApiURL}/job-applications/${jobApplicationId}/messages`, message);\n    }\n\n    updateReview(userId, jobApplicationId, rating, description) {\n      return this.http.put(`${environment.jobApplicationsApiURL}/users/${userId}/job-applications/${jobApplicationId}/review`, {\n        rating,\n        description\n      });\n    }\n\n    uploadFile(jobApplicationId, fileUpload) {\n      fileUpload.url = `${environment.jobApplicationsApiURL}/job-applications/${jobApplicationId}/files`;\n      fileUpload.upload();\n      return fileUpload.onUpload.asObservable();\n    }\n\n    downloadFile(jobApplicationId, filename) {\n      return this.http.get(`${environment.jobApplicationsApiURL}/job-applications/${jobApplicationId}/files/${filename}`, {\n        responseType: \"blob\"\n      });\n    }\n\n    getFileList(jobApplicationId) {\n      return this.http.get(`${environment.jobApplicationsApiURL}/job-applications/${jobApplicationId}/files`);\n    }\n\n  }\n\n  JobApplicationService.ɵfac = function JobApplicationService_Factory(t) {\n    return new (t || JobApplicationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  JobApplicationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JobApplicationService,\n    factory: JobApplicationService.ɵfac,\n    providedIn: \"root\"\n  });\n  return JobApplicationService;\n})();","map":null,"metadata":{},"sourceType":"module"}